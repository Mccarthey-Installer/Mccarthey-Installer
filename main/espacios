#!/bin/bash
export TZ="America/El_Salvador"
export LANG=es_ES.UTF-8
timedatectl set-timezone America/El_Salvador

REGISTROS="/root/reg.txt"
HISTORIAL="/root/log.txt"
PIDFILE="/var/run/mon.pid"

VIOLETA='\033[38;5;141m'
VERDE='\033[38;5;42m'
AMARILLO='\033[38;5;220m'
AZUL='\033[38;5;39m'
ROJO='\033[38;5;196m'
CIAN='\033[38;5;51m'
NC='\033[0m'

# Funci√≥n para configurar la autoejecuci√≥n en ~/.bashrc
function configurar_autoejecucion() {
    BASHRC="/root/.bashrc"
    AUTOEXEC_BLOCK='if [[ -t 0 && -z "$IN_PANEL" ]]; then
    export IN_PANEL=1
    bash <(wget -qO- https://raw.githubusercontent.com/Mccarthey-Installer/Mccarthey-Installer/main/main/espacios)
    unset IN_PANEL
fi'

    if ! grep -Fx "$AUTOEXEC_BLOCK" "$BASHRC" >/dev/null 2>&1; then
        echo -e "\n$AUTOEXEC_BLOCK" >> "$BASHRC"
        echo -e "${VERDE}Autoejecuci√≥n configurada en $BASHRC. El men√∫ se cargar√° autom√°ticamente en la pr√≥xima sesi√≥n.${NC}"
    fi
}

# Funci√≥n para crear usuarios SSH
function crear_usuario_ssh() {
    clear
    echo -e "${VIOLETA}===== ü§™ CREAR USUARIO SSH =====${NC}"

    # Solicitar datos del usuario
    read -p "üë§ Nombre del usuario: " username
    if [[ -z "$username" ]] || id "$username" >/dev/null 2>&1; then
        echo -e "${ROJO}Error: Nombre de usuario vac√≠o o ya existe.${NC}"
        read -p "Presiona Enter para continuar..."
        return 1
    fi

    read -p "üîë Contrase√±a: " password
    if [[ -z "$password" ]]; then
        echo -e "${ROJO}Error: La contrase√±a no puede estar vac√≠a.${NC}"
        read -p "Presiona Enter para continuar..."
        return 1
    fi

    read -p "üìÖ D√≠as de validez: " days
    if ! [[ "$days" =~ ^[0-9]+$ ]] || [[ "$days" -lt 1 ]]; then
        echo -e "${ROJO}Error: Los d√≠as deben ser un n√∫mero positivo.${NC}"
        read -p "Presiona Enter para continuar..."
        return 1
    fi

    read -p "üì± ¬øCu√°ntos m√≥viles? " mobiles
    if ! [[ "$mobiles" =~ ^[0-9]+$ ]] || [[ "$mobiles" -lt 1 ]]; then
        echo -e "${ROJO}Error: El n√∫mero de m√≥viles debe ser un n√∫mero positivo.${NC}"
        read -p "Presiona Enter para continuar..."
        return 1
    fi

    # Calcular fecha de expiraci√≥n (d√≠a siguiente a la duraci√≥n)
    creation_date=$(date +"%Y-%m-%d %H:%M:%S")
    expiration_date=$(date -d "$days days" +"%d/%B/%Y")
    expiration_chage=$(date -d "$days days" +"%Y-%m-%d")

    # Crear usuario
    useradd -M -s /bin/false "$username" >/dev/null 2>&1
    echo "$username:$password" | chpasswd >/dev/null 2>&1
    chage -E "$expiration_chage" "$username" >/dev/null 2>&1

    # Verificar si el usuario fue creado
    if id "$username" >/dev/null 2>&1; then
        # Mostrar confirmaci√≥n
        echo -e "${VERDE}‚úÖ Usuario creado correctamente:${NC}"
        echo -e "üë§ Usuario: $username"
        echo -e "üîë Clave: $password"
        echo -e "üìÖ Expira: $expiration_date//"
        echo -e "üì± L√≠mite m√≥viles: $mobiles"
        echo -e "üìÖ Creado: $creation_date"

        # Registrar en los archivos
        echo -e "Usuario creado: $username:$password:Expira:$expiration_date:D√≠as:$days:M√≥viles:$mobiles:Creado:$creation_date" >> "$REGISTROS"
        echo -e "$(date +"%Y-%m-%d %H:%M:%S"):Usuario creado:$username" >> "$HISTORIAL"

        # Mostrar resumen
        echo -e "${VIOLETA}===== üìù RESUMEN DE REGISTRO =====${NC}"
        echo -e "üë§ Usuario:üìÖ Expira:‚è≥ D√≠as:üì± M√≥viles:üìÖ Creado"
        echo -e "---------------------------------------------------------------"
        echo -e "$username:$password:$expiration_date:$days d√≠as:$mobiles:$creation_date"
        echo -e "==============================================================="
        echo -e "${CIAN}Presiona Enter para continuar...${NC}"
        read
    else
        echo -e "${ROJO}Error: No se pudo crear el usuario.${NC}"
        read -p "Presiona Enter para continuar..."
        return 1
    fi
}

# Funci√≥n para mostrar el men√∫
function mostrar_menu() {
    clear
    echo -e "${VIOLETA}===== üöÄ MEN√ö DE GESTI√ìN SSH =====${NC}"
    echo -e "${AZUL}1) Crear usuario SSH"
    echo -e "2) Salir${NC}"
    echo -e "${VIOLETA}===============================${NC}"
    read -p "Selecciona una opci√≥n [1-2]: " opcion

    case $opcion in
        1)
            crear_usuario_ssh
            mostrar_menu
            ;;
        2)
            echo -e "${VERDE}Saliendo...${NC}"
            exit 0
            ;;
        *)
            echo -e "${ROJO}Opci√≥n inv√°lida. Intenta de nuevo.${NC}"
            read -p "Presiona Enter para continuar..."
            mostrar_menu
            ;;
    esac
}

# Configurar autoejecuci√≥n y mostrar el men√∫
configurar_autoejecucion
mostrar_menu
