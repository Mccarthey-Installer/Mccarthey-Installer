#!/bin/bash

# ================================
# ███╗   ███╗ ██████╗ ██████╗ ███████╗
# ████╗ ████║██╔═══██╗██╔══██╗██╔════╝
# ██╔████╔██║██║   ██║██████╔╝█████╗  
# ██║╚██╔╝██║██║   ██║██╔═══╝ ██╔══╝  
# ██║ ╚═╝ ██║╚██████╔╝██║     ███████╗
# ╚═╝     ╚═╝ ╚═════╝ ╚═╝     ╚══════╝
#       McCarthey Installer v1.1
# Validación de KEY remota y panel opcional
# ================================

# ------------------------------
# [ ARGUMENTOS ]
# ------------------------------
ENABLE_PANEL=false
for arg in "$@"; do
    if [[ "$arg" == "--mccpanel" ]]; then
        ENABLE_PANEL=true
    fi
done

# ------------------------------
# [ OBTENER MCC-KEY ]
# ------------------------------
KEY="$1"
if [[ "$KEY" == "--mccpanel" ]]; then
    KEY=""
fi

if [ -z "$KEY" ]; then
    clear
    echo -e "\e[1;34m"
    echo "============================================="
    echo "           MCC-KEY NO PROPORCIONADA          "
    echo "============================================="
    echo -e "\e[0m"

    echo -e "\e[1;36m"
    echo "╔═══════════════════════════════════════════╗"
    echo "║           INGRESA TU MCC-KEY              ║"
    echo "╚═══════════════════════════════════════════╝"
    echo -e "\e[0m"

    read -p "> " KEY
fi

ENCODED_KEY=$(echo "$KEY" | sed 's/{/%7B/' | sed 's/}/%7D/')
VALIDATOR_URL="http://172.235.128.99:9393/validate/$ENCODED_KEY"

echo -e "\n\033[1;34m[ INFO ]\033[0m Verificando KEY con el servidor..."
RESPONSE=$(curl -s "$VALIDATOR_URL")
VALIDO=$(echo "$RESPONSE" | grep -o '"valida":true')

if [ -z "$VALIDO" ]; then
    MOTIVO=$(echo "$RESPONSE" | grep -oP '"motivo":"\K[^"]+')
    echo -e "\n\033[1;31m[ ERROR ]\033[0m Key inválida: $MOTIVO"
    exit 1
fi

USERNAME=$(echo "$RESPONSE" | grep -oP '"username":"\K[^"]+')
echo -e "\n\033[1;32m[ OK ]\033[0m Key válida. Continuando con la instalación..."
echo -e "\033[1;34mKey: Verified【  $USERNAME  】\033[0m"

# ------------------------------
# [ ACTUALIZACIÓN DEL SISTEMA ]
# ------------------------------
echo -e "\n\033[1;33m==============================================\033[0m"
echo -e "\033[1;33m      ACTUALIZANDO SISTEMA Y PAQUETES          \033[0m"
echo -e "\033[1;33m==============================================\033[0m"

apt update -y && apt upgrade -y

if command -v needrestart >/dev/null; then
    needrestart -r a
fi

apt install -y curl unzip wget

# ------------------------------
# [ INSTALACIÓN DE PAQUETES ]
# ------------------------------
PAQUETES=(
  bsdmainutils screen nginx nload htop python3 python3-pip
  nodejs npm lsof psmisc socat bc netcat net-tools cowsay
  nmap jq iptables
)

echo -e "\n\033[1;33m==============================================\033[0m"
echo -e "\033[1;33m          INSTALANDO PAQUETES NECESARIOS        \033[0m"
echo -e "\033[1;33m==============================================\033[0m"

for paquete in "${PAQUETES[@]}"; do
    apt install -y "$paquete" &>/dev/null
    if dpkg -s "$paquete" &>/dev/null; then
        echo -e "\033[1;32m[ OK ]\033[0m Instalación correcta: ${paquete^^}"
    else
        echo -e "\033[1;31m[ FAIL ]\033[0m Error al instalar: ${paquete^^}"
    fi
done

# ------------------------------
# [ PANEL OPCIONAL McCARTHEY ]
# ------------------------------
if $ENABLE_PANEL; then
cat << 'EOF' > /root/menu.sh
#!/bin/bash
clear

# Obtener datos del sistema
fecha=$(TZ=America/El_Salvador date +"%a %d/%m/%Y - %I:%M:%S %p %Z")
ip=$(hostname -I | awk '{print $1}')
cpu_model=$(awk -F: '/model name/ {print $2; exit}' /proc/cpuinfo)
cpus=$(nproc)
so=$(lsb_release -d | cut -f2)

# RAM en tiempo real (en MB)
read total used free shared buff_cache available <<< $(free -m | awk '/^Mem:/ {print $2, $3, $4, $5, $6, $7}')

# Uso de CPU en tiempo real
cpu_uso=$(top -bn1 | grep "Cpu(s)" | awk '{print 100 - $8}')
cpu_uso_fmt=$(awk "BEGIN {printf \"%.1f%%\", $cpu_uso}")
ram_porc=$(awk "BEGIN {printf \"%.2f%%\", ($used/$total)*100}")

# Mostrar en GB si total >= 1024, si no en MB
if [ "$total" -ge 1024 ]; then
  ram_total=$(awk "BEGIN {printf \"%.1fG\", $total/1024}")
  ram_libre=$(awk "BEGIN {printf \"%.1fG\", $available/1024}")
else
  ram_total="${total}M"
  ram_libre="${available}M"
fi

ram_usada=$(awk "BEGIN {printf \"%.0fM\", $used}")
ram_cache=$(awk "BEGIN {printf \"%.0fM\", $buff_cache}")

# Obtener frecuencia del CPU
cpu_freq=$(awk -F: '/cpu MHz/ {print $2; exit}' /proc/cpuinfo | awk '{printf "%.0f MHz", $1}')

# PANEL
echo -e "\e[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo -e "          \e[1mPANEL OFICIAL MCCARTHEY\e[0m"
echo -e "\e[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo -e " FECHA       : $fecha"
echo -e " IP VPS      : $ip"
echo -e " CPU's       : $cpus"
echo -e " MODELO CPU  :$cpu_model"
echo -e " S.O         : $so"
echo -e "\e[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo -e " ∘ TOTAL: $ram_total  ∘ LIBRE: $ram_libre  ∘ EN USO: $ram_usada"
echo -e " ∘ U/RAM: $ram_porc   ∘ U/CPU: $cpu_uso_fmt  ∘ BUFFER: $ram_cache"
echo -e " ∘ FRECUENCIA CPU: $cpu_freq"
echo -e "\e[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo -e " [1] ➮ CREAR NUEVO USUARIO SSH"
echo -e " [2] ➮ SALIR"
echo -e "\e[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
read -p "► Elige una opción: " opc
case $opc in
  1)
    read -p "Nombre de usuario: " USUARIO
    read -p "Contraseña: " PASSWORD
    read -p "Días de validez: " DIAS
    useradd -e $(date -d "$DIAS days" +%Y-%m-%d) -s /bin/false -M $USUARIO
    echo "$USUARIO:$PASSWORD" | chpasswd
    echo ""
    echo "Usuario creado con éxito:"
    echo "Usuario: $USUARIO"
    echo "Contraseña: $PASSWORD"
    echo "Expira en: $DIAS días"
    ;;
  2)
    echo "Saliendo del panel..."
    exit 0
    ;;
  *)
    echo "Opción no válida."
    ;;
esac
EOF

chmod +x /root/menu.sh
ln -sf /root/menu.sh /usr/bin/menu
chmod +x /usr/bin/menu

echo -e "\n\033[1;36m[ PANEL ]\033[0m Panel McCarthey instalado y listo para usar."
echo "Ejecuta \033[1;33mmenu\033[0m para acceder."
fi

# ------------------------------
# [ FINALIZACIÓN ]
# ------------------------------
echo -e "\n\033[1;32m==============================================\033[0m"
echo -e "\033[1;32m      ¡TU VPS ESTÁ LISTA PARA DESPEGAR!         \033[0m"
echo -e "\033[1;32m==============================================\033[0m"
echo -e "Puedes acceder al panel usando: \033[1;33mmenu\033[0m"
echo -e "¡Gracias por usar \033[1;35mMcCarthey Installer\033[0m!"
